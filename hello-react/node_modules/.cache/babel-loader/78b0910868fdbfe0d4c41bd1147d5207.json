{"ast":null,"code":"var _jsxFileName = \"V:\\\\reactjs\\\\reactjs_test\\\\hello-react\\\\src\\\\Counter2.js\";\nimport React, { Component } from 'react';\n\nclass Counter2 extends Component {\n  // 컴포넌트가 생성될 때 1회 호출\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0\n    };\n\n    this.handleIncrease = () => {\n      const number = this.state.number;\n      this.setState({\n        number: number + 1\n      });\n    };\n\n    this.handleDecrease = () => {\n      this.setState(({\n        number\n      }) => ({\n        number: number - 1\n      }));\n    };\n\n    console.log('constructor');\n  } // 컴포넌트 생성(constructor) 후 1회 호출 \n\n\n  componentWillMount() {\n    console.log('componentWillMount (deprecated)');\n  } // 컴포넌트 생성 완료(render) 후 1회 호출\n\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  } // 컴포넌트의 변화가 있는 경우 false 이면 렌더링 하지 않음.\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 5의 배수라면 리렌더링 하지 않음.\n    console.log('shouldComponentUpdate');\n\n    if (nextState.number % 5 === 0) {\n      console.log('shouldComponentUpdate false');\n      return false;\n    }\n\n    return true;\n  } // shouldComponentUpdate 가 true 이면 호출 됨.\n  // reuder 바로 전 호출\n\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('componentWillUpdate');\n  } // shouldComponentUpdate 가 true 이면 호출 됨.\n  // render 바로 후 호출\n\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\uCE74\\uC6B4\\uD130\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uAC12: \", this.state.number), React.createElement(\"button\", {\n      onClick: this.handleIncrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: this.handleDecrease,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"-\"));\n  }\n\n}\n/*\r\nCounter2.js:11 constructor\r\nCounter2.js:16 componentWillMount (deprecated)\r\nCounter2.js:60 render\r\nCounter2.js:21 componentDidMount\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:29 shouldComponentUpdate false\r\n*/\n\n\nexport default Counter2;","map":{"version":3,"sources":["V:\\reactjs\\reactjs_test\\hello-react\\src\\Counter2.js"],"names":["React","Component","Counter2","constructor","props","state","number","handleIncrease","setState","handleDecrease","console","log","componentWillMount","componentDidMount","shouldComponentUpdate","nextProps","nextState","componentWillUpdate","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAK7B;AACAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SALnBC,KAKmB,GALX;AACJC,MAAAA,MAAM,EAAE;AADJ,KAKW;;AAAA,SAsCnBC,cAtCmB,GAsCF,MAAM;AAAA,YACXD,MADW,GACA,KAAKD,KADL,CACXC,MADW;AAEnB,WAAKE,QAAL,CAAc;AACVF,QAAAA,MAAM,EAAEA,MAAM,GAAG;AADP,OAAd;AAGH,KA3CkB;;AAAA,SA4CnBG,cA5CmB,GA4CF,MAAM;AACnB,WAAKD,QAAL,CACI,CAAC;AAAEF,QAAAA;AAAF,OAAD,MAAiB;AACbA,QAAAA,MAAM,EAAEA,MAAM,GAAG;AADJ,OAAjB,CADJ;AAKH,KAlDkB;;AAEfI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAT4B,CAW7B;;;AACAC,EAAAA,kBAAkB,GAAG;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH,GAd4B,CAgB7B;;;AACAE,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GAnB4B,CAqB7B;;;AACAG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,QAAIK,SAAS,CAACV,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC5BI,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GA9B4B,CAgC7B;AACA;;;AACAM,EAAAA,mBAAmB,CAACF,SAAD,EAAYC,SAAZ,EAAuB;AACtCN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GApC4B,CAsC7B;AACA;;;AACAO,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrCV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;;AAgBDU,EAAAA,MAAM,GAAG;AACLX,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAS,KAAKN,KAAL,CAAWC,MAApB,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADJ;AAQH;;AApE4B;AAuEjC;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAeP,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter2 extends Component {\r\n    state = {\r\n        number: 0\r\n    }\r\n\r\n    // 컴포넌트가 생성될 때 1회 호출\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('constructor');\r\n    }\r\n\r\n    // 컴포넌트 생성(constructor) 후 1회 호출 \r\n    componentWillMount() {\r\n        console.log('componentWillMount (deprecated)');\r\n    }\r\n\r\n    // 컴포넌트 생성 완료(render) 후 1회 호출\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n    }\r\n\r\n    // 컴포넌트의 변화가 있는 경우 false 이면 렌더링 하지 않음.\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // 5의 배수라면 리렌더링 하지 않음.\r\n        console.log('shouldComponentUpdate');\r\n        if (nextState.number % 5 === 0) {\r\n            console.log('shouldComponentUpdate false');\r\n            return false;\r\n        } \r\n        return true;\r\n    }\r\n\r\n    // shouldComponentUpdate 가 true 이면 호출 됨.\r\n    // reuder 바로 전 호출\r\n    componentWillUpdate(nextProps, nextState) {\r\n        console.log('componentWillUpdate');\r\n    }\r\n\r\n    // shouldComponentUpdate 가 true 이면 호출 됨.\r\n    // render 바로 후 호출\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate');\r\n    }\r\n\r\n    handleIncrease = () => {\r\n        const { number } = this.state;\r\n        this.setState({\r\n            number: number + 1\r\n        });\r\n    }\r\n    handleDecrease = () => {\r\n        this.setState(\r\n            ({ number }) => ({\r\n                number: number - 1\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <div>\r\n                <h1>카운터</h1>\r\n                <div>값: {this.state.number}</div>\r\n                <button onClick={this.handleIncrease}>+</button>\r\n                <button onClick={this.handleDecrease}>-</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nCounter2.js:11 constructor\r\nCounter2.js:16 componentWillMount (deprecated)\r\nCounter2.js:60 render\r\nCounter2.js:21 componentDidMount\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:37 componentWillUpdate\r\nCounter2.js:60 render\r\nCounter2.js:42 componentDidUpdate\r\n\r\nCounter2.js:27 shouldComponentUpdate\r\nCounter2.js:29 shouldComponentUpdate false\r\n*/\r\n\r\nexport default Counter2;"]},"metadata":{},"sourceType":"module"}